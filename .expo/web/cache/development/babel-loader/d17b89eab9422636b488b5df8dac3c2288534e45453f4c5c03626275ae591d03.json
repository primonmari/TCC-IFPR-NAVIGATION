{"ast":null,"code":"import 'react-native-gesture-handler';\nimport React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons, Foundation, Ionicons } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport HomeScreen from \"../mainScreens/HomeScreen\";\nimport Appointments from \"../mainScreens/Appointments\";\nimport New from \"../mainScreens/New\";\nimport Notifications from \"../mainScreens/Notifications\";\nimport General from \"../mainScreens/General\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar TabRoutes = function TabRoutes() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Obras\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarActiveTintColor: '#00B029',\n        headerStyle: {\n          backgroundColor: '#00B029'\n        },\n        headerTintColor: '#ffffff',\n        headerTitleStyle: {\n          fontSize: 18\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          if (route.name === 'Adicionar') {\n            return _jsx(NewTabButton, {});\n          }\n          return getDefaultTabIcon(route, color, size);\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Obras\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Obras',\n        title: 'Obras'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Apontamentos\",\n      component: Appointments,\n      options: {\n        tabBarLabel: 'Apontamentos',\n        title: 'Apontamentos'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Adicionar\",\n      component: New,\n      options: {\n        tabBarLabel: '',\n        tabBarLabelStyle: {\n          color: 'gray'\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Notificacoes\",\n      component: Notifications,\n      options: {\n        tabBarLabel: 'Notificações',\n        title: 'Notificações'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Geral\",\n      component: General,\n      options: {\n        tabBarLabel: 'Geral',\n        title: 'Geral'\n      }\n    })]\n  });\n};\nvar getDefaultTabIcon = function getDefaultTabIcon(route, color, size) {\n  switch (route.name) {\n    case 'Obras':\n      return _jsx(MaterialCommunityIcons, {\n        name: \"home\",\n        color: color,\n        size: size\n      });\n    case 'Apontamentos':\n      return _jsx(Foundation, {\n        name: \"clipboard-notes\",\n        color: color,\n        size: size\n      });\n    case 'Notificacoes':\n      return _jsx(Ionicons, {\n        name: \"notifications\",\n        color: color,\n        size: size\n      });\n    case 'Geral':\n      return _jsx(Ionicons, {\n        name: \"ios-open\",\n        color: color,\n        size: size\n      });\n    default:\n      return null;\n  }\n};\nvar NewTabButton = function NewTabButton() {\n  return _jsx(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(New, {})\n  });\n};\nexport default TabRoutes;","map":{"version":3,"names":["React","createBottomTabNavigator","MaterialCommunityIcons","Foundation","Ionicons","View","HomeScreen","Appointments","New","Notifications","General","jsx","_jsx","jsxs","_jsxs","Tab","TabRoutes","Navigator","initialRouteName","screenOptions","_ref","route","tabBarActiveTintColor","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontSize","tabBarIcon","_ref2","color","size","name","NewTabButton","getDefaultTabIcon","children","Screen","component","options","tabBarLabel","title","tabBarLabelStyle","style","alignItems","justifyContent"],"sources":["C:/Users/maris/Downloads/TCC-IFPR - Copia/src/routes/tab.routes.jsx"],"sourcesContent":["  // Importa as bibliotecas \r\n  import 'react-native-gesture-handler';\r\n  \r\n  import React from 'react';\r\n  import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n  import { MaterialCommunityIcons, Foundation, Ionicons } from '@expo/vector-icons';\r\n\r\n  // Importa o componente View do React Native\r\n  import { View } from 'react-native';\r\n\r\n  // Importa as telas principais do aplicativo\r\n  import HomeScreen from '../mainScreens/HomeScreen';\r\n  import Appointments from '../mainScreens/Appointments';\r\n  import New from '../mainScreens/New';\r\n  import Notifications from '../mainScreens/Notifications';\r\n  import General from '../mainScreens/General';\r\n\r\n  // Cria um navegador de abas inferior usando createBottomTabNavigator\r\n  const Tab = createBottomTabNavigator();\r\n\r\n  // Define o componente funcional TabRoutes\r\n  const TabRoutes = () => {\r\n    // Retorna a configuração do navegador de abas\r\n    return (\r\n      <Tab.Navigator\r\n        initialRouteName=\"Obras\"\r\n        screenOptions={({ route }) => ({\r\n          tabBarActiveTintColor: '#00B029',  // Cor do ícone ativo\r\n          headerStyle: {\r\n            backgroundColor: '#00B029',  // Cor de fundo do cabeçalho\r\n          },\r\n          headerTintColor: '#ffffff',  // Cor do texto do cabeçalho\r\n          headerTitleStyle: {\r\n            fontSize: 18,  // Tamanho do texto do cabeçalho\r\n          },\r\n          tabBarIcon: ({ color, size }) => {\r\n            if (route.name === 'Adicionar') {\r\n              // Renderiza um ícone personalizado para a guia \"Adicionar\"\r\n              return (\r\n                <NewTabButton />\r\n              );\r\n            }\r\n            // Renderiza os outros ícones padrão para as demais guias\r\n            return getDefaultTabIcon(route, color, size);\r\n          },\r\n        })}\r\n      >\r\n        {/* Configuração da tela \"Obras\" */}\r\n        <Tab.Screen\r\n          name=\"Obras\"\r\n          component={HomeScreen}\r\n          options={{\r\n            tabBarLabel: 'Obras',  // Rótulo na aba\r\n            title: 'Obras',  // Título da tela\r\n          }}\r\n        />\r\n        {/* Configuração da tela \"Apontamentos\" */}\r\n        <Tab.Screen\r\n          name=\"Apontamentos\"\r\n          component={Appointments}\r\n          options={{\r\n            tabBarLabel: 'Apontamentos',  // Rótulo na aba\r\n            title: 'Apontamentos',  // Título da tela\r\n          }}\r\n        />\r\n        {/* Configuração da tela \"Adicionar\" */}\r\n        <Tab.Screen\r\n          name=\"Adicionar\"\r\n          component={New}\r\n          options={{\r\n            tabBarLabel: '',  // Rótulo na aba (vazio para esconder)\r\n            tabBarLabelStyle: {\r\n              color: 'gray',  // Cor do rótulo\r\n            },\r\n          }}\r\n        />\r\n        {/* Configuração da tela \"Notificações\" */}\r\n        <Tab.Screen\r\n          name=\"Notificacoes\"\r\n          component={Notifications}\r\n          options={{\r\n            tabBarLabel: 'Notificações',  // Rótulo na aba\r\n            title: 'Notificações',  // Título da tela\r\n          }}\r\n        />\r\n        {/* Configuração da tela \"Geral\" */}\r\n        <Tab.Screen\r\n          name=\"Geral\"\r\n          component={General}\r\n          options={{\r\n            tabBarLabel: 'Geral',  // Rótulo na aba\r\n            title: 'Geral',  // Título da tela\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    );\r\n  };\r\n\r\n  // Função para renderizar o ícone padrão das guias\r\n  const getDefaultTabIcon = (route, color, size) => {\r\n    switch (route.name) {\r\n      case 'Obras':\r\n        return <MaterialCommunityIcons name=\"home\" color={color} size={size} />;\r\n      case 'Apontamentos':\r\n        return <Foundation name=\"clipboard-notes\" color={color} size={size} />;\r\n      case 'Notificacoes':\r\n        return <Ionicons name=\"notifications\" color={color} size={size} />;\r\n      case 'Geral':\r\n        return <Ionicons name=\"ios-open\" color={color} size={size} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Componente para renderizar o botão flutuante na guia \"Adicionar\"\r\n  const NewTabButton = () => {\r\n    return (\r\n      <View style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n        <New />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // Exporta o componente TabRoutes\r\n  export default TabRoutes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}